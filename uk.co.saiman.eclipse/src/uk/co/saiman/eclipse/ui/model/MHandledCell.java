/*
 * Copyright (C) 2018 Scientific Analysis Instruments Limited <contact@saiman.co.uk>
 *          ______         ___      ___________
 *       ,'========\     ,'===\    /========== \
 *      /== \___/== \  ,'==.== \   \__/== \___\/
 *     /==_/____\__\/,'==__|== |     /==  /
 *     \========`. ,'========= |    /==  /
 *   ___`-___)== ,'== \____|== |   /==  /
 *  /== \__.-==,'==  ,'    |== '__/==  /_
 *  \======== /==  ,'      |== ========= \
 *   \_____\.-\__\/        \__\\________\/
 *
 * This file is part of uk.co.saiman.eclipse.treeview.
 *
 * uk.co.saiman.eclipse.treeview is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * uk.co.saiman.eclipse.treeview is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package uk.co.saiman.eclipse.ui.model;

import org.eclipse.core.commands.ParameterizedCommand;
import org.eclipse.e4.ui.di.AboutToShow;
import org.eclipse.e4.ui.model.application.MApplicationElement;
import org.eclipse.e4.ui.model.application.commands.MCommand;

/**
 * This interface represents a specialization of a UI cell, for example in a
 * table or tree. It performs a similar function to a LabelDecorator This can be
 * used to inject behavior and prepare UI for a cell according to its contents.
 * <p>
 * The contribution class should contain exactly one method annotated with
 * {@link AboutToShow}. This method defines the behavior to prepare the tree
 * item for the element.
 * <p>
 * TODO Ultimately this interface should be generated by the EMF model
 * generator, with implementations instantiated by the EMF runtime, such that it
 * can be supported in the E4 application model. It is named according to the
 * convention of {@link MApplicationElement application elements} to indicate
 * this intent. Currently it is defined manually, and instances are collected
 * via OSGi DS.
 * 
 * @author Elias N Vasylenko
 */
public interface MHandledCell extends MCell {
  MCommand getCommand();

  void setCommand(MCommand value);

  ParameterizedCommand getWbCommand();

  void setWbCommand(ParameterizedCommand value);
}
